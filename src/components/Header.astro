---
interface Props {
  lang: string;
}
const { lang } = Astro.props;

import { headerLang } from '../translate/header';
import ChageLenguage from './ChageLenguage.astro';
import Down from './Down.astro';
const menu = lang === 'es' ? headerLang.menuEs : headerLang.menuEn;
---

<header class="Header bg-[var(--header-color)] top-0 w-full sticky z-[500]">
  <ChageLenguage lang={lang} />
  <!-- <div
    class="flags absolute right-8 top-2 md:top-4 gap-x-3 flex items-center scale-75 md:scale-100"
  >
    <a class={`block w-4 h-auto ${lang === 'en' ? 'scale-125' : ''}`} href="/">
      <img src="/us.svg" alt="us flag" />
    </a>
    <span class="block opacity-50">|</span>
    <a
      class={`block w-4 h-auto ${lang === 'es' ? 'scale-125' : ''}`}
      href="/es"
    >
      <img class="block" src="/es.svg" alt="sp flag" />
    </a>
  </div> -->
  <div
    class="flex justify-between items-center h-[var(--header-height)] w-container mx-auto"
  >
    <img
      src="/logo.svg"
      alt="Logo Destiladora Agave Azul"
      class="w-[60%] max-w-[200px] md:w-[40%] md:max-w-none lg:w-logo"
      id="logo"
    />
    <nav>
      <button class={`hamburger hamburger--squeeze lg:hidden `} type="button">
        <span class="hamburger-box">
          <span class="hamburger-inner"> </span>
        </span>
      </button>
      <ul id="main-menu" class="main-menu">
        {
          menu.map((item) => (
            <li>
              <a href={item.url}>{item.title}</a>
            </li>
          ))
        }
        <li class="md:hidden uppercase">
          {
            lang === 'es' ? (
              <a href="/" class="item-flag">
                <img class="block w-4 h-auto mt-4" src="/us.svg" alt="" />
                English
              </a>
            ) : (
              <a href="/es" class="item-flag">
                <img class="block w-4 h-auto mt-4" src="/es.svg" alt="" />
                Espa√±ol
              </a>
            )
          }
        </li>
      </ul>
    </nav>
  </div>
</header>
<script>
  const toggleBtn: any = document.querySelector('.hamburger');
  const links = [...document.querySelectorAll('.main-menu a')];
  const logo = document.getElementById('logo');
  const header = document.querySelector('.Header');
  // let context = 1920;
  // let alto = 190;
  // let res = (alto * 100) / context;
  // // 200*100/1920
  toggleBtn?.addEventListener('click', (e: any) => {
    toggleBtn.classList.toggle('is-active');
    document.getElementById('main-menu')?.classList.toggle('is-active');
  });
  links.forEach((link) => {
    link.addEventListener('click', (e) => {
      toggleBtn.click();
    });
  });
  logo?.addEventListener('click', (e: any) => {
    e.preventDefault();
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: 'smooth',
    });
    window.location.hash = '';
  });
  let headerHeight: any = document.querySelector('.Header')?.clientHeight;
  window.addEventListener('scroll', (e) => {
    let scroll = window.scrollY;
    console.log(window.scrollY, headerHeight);
    if (scroll >= headerHeight) {
      console.log(scroll, headerHeight);
      header?.classList.add('white');
      document.documentElement.style.setProperty(
        '--header-height',
        `${headerHeight * 0.75}px`
      );
    } else {
      header?.classList.remove('white');
      document.documentElement.style.setProperty(
        '--header-height',
        `${headerHeight}px`
      );
    }
  });
</script>
